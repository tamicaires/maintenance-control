import { WorkOrder as WorkOrderRaw } from '@prisma/client';
import { WorkOrder } from 'src/core/domain/entities/work-order';
import { MaintenanceStatus } from 'src/core/enum/maitenance-status.enum';
import { TypeOfMaintenance } from 'src/core/enum/type-of-maintenance.enum';

export class PrismaWorkOrderMapper {
  static toPrisma({
    id,
    displayId,
    severityLevel,
    entryQueue,
    entryMaintenance,
    exitMaintenance,
    startWaitingParts,
    endWaitingParts,
    queueDuration,
    maintenanceDuration,
    waitingPartsDuration,
    exitSupervisor,
    fleetId,
    userId,
    companyId,
    typeOfMaintenance,
    status,
    boxId,
    isCancelled,
    createdBy,
    updatedBy,
    createdAt,
    updatedAt,
  }: WorkOrder): WorkOrderRaw {
    return {
      id,
      displayId,
      severityLevel,
      entryQueue,
      entryMaintenance,
      exitMaintenance,
      startWaitingParts,
      endWaitingParts,
      queueDuration,
      maintenanceDuration,
      waitingPartsDuration,
      exitSupervisor,
      fleetId,
      userId,
      companyId,
      typeOfMaintenance,
      status,
      boxId,
      isCancelled,
      createdBy,
      updatedBy,
      createdAt,
      updatedAt,
    };
  }

  static toDomain({
    id,
    displayId,
    severityLevel,
    entryQueue,
    entryMaintenance,
    exitMaintenance,
    startWaitingParts,
    endWaitingParts,
    queueDuration,
    maintenanceDuration,
    waitingPartsDuration,
    exitSupervisor,
    createdBy,
    updatedBy,
    fleetId,
    userId,
    companyId,
    typeOfMaintenance,
    status,
    boxId,
    isCancelled,
    createdAt,
    updatedAt,
  }: WorkOrderRaw): WorkOrder {
    return new WorkOrder(
      {
        displayId,
        severityLevel,
        entryQueue,
        entryMaintenance,
        exitMaintenance,
        startWaitingParts,
        endWaitingParts,
        queueDuration,
        maintenanceDuration,
        waitingPartsDuration,
        exitSupervisor,
        createdBy,
        updatedBy,
        fleetId,
        userId,
        companyId,
        typeOfMaintenance: typeOfMaintenance as TypeOfMaintenance,
        status: status as MaintenanceStatus,
        boxId,
        isCancelled,
        createdAt,
        updatedAt,
      },
      id,
    );
  }
}
